// Package lightsources implements different types of light sources.
package lightsources

import "github.com/flynn-nrg/izpi/internal/spectral"

var lightSources = map[string]*spectral.SpectralPowerDistribution{
	// Royer, Michael (2019). Spectral power distributions. figshare. Dataset. https://doi.org/10.6084/m9.figshare.7704566.v1
	// Values are spectral power distributions sampled at 5nm intervals from 380nm to 750nm.
	// For practical purposes, only a subset of the light sources are included.
	// HY (Hongyi): Cree LLF, NGL-47, GE Lumination, Cree Module, Cree PAR38
	// PC (Phosphor Converted): Various NGL models, Maxled, Current GE, Samjin, Green Creative MR16, Soraa MR16, Seoul Sunlike
	// PCV (Phosphor Converted Violet): Soraa Premium 2700K, Soraa Vivid 2700K
	// CM (Chip Mix): Acuity Evo, Intense MXRTR2, Lumenetix, Edison Price, Pathway/Lexel
	"hy_cree_llf_tm_30_90": spectral.NewCIESPD([]float64{
		0.0032, 0.0032, 0.0032, 0.0032, 0.0032, 0.0032, 0.0032, 0.0059, 0.0200, 0.0415,
		0.0807, 0.1222, 0.1894, 0.2666, 0.2720, 0.2251, 0.1899, 0.2193, 0.2636, 0.2543,
		0.2188, 0.1885, 0.1645, 0.1628, 0.1784, 0.2071, 0.2426, 0.2796, 0.3142, 0.3419,
		0.3634, 0.3769, 0.3859, 0.3905, 0.3924, 0.3913, 0.3886, 0.3853, 0.3806, 0.3738,
		0.3681, 0.3637, 0.3635, 0.3654, 0.3782, 0.4164, 0.5197, 0.7086, 1.0000, 0.9369,
		0.4990, 0.3076, 0.2092, 0.1670, 0.1402, 0.1250, 0.1090, 0.0952, 0.0864, 0.0775,
		0.0663, 0.0571, 0.0506, 0.0451, 0.0404, 0.0362, 0.0325, 0.0296, 0.0270, 0.0236,
		0.0197, 0.0158, 0.0130, 0.0127, 0.0126,
	}),
	"hy_ngl_47_tm_30_92": spectral.NewCIESPD([]float64{
		0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0028, 0.0060, 0.0102, 0.0221, 0.0360,
		0.0590, 0.0845, 0.1104, 0.1362, 0.1558, 0.1450, 0.1145, 0.0928, 0.0769, 0.0696,
		0.0623, 0.0692, 0.0806, 0.0920, 0.1065, 0.1421, 0.1777, 0.2082, 0.2360, 0.2615,
		0.2764, 0.2913, 0.3057, 0.3083, 0.3109, 0.3136, 0.3127, 0.3115, 0.3080, 0.3030,
		0.2991, 0.2953, 0.2972, 0.3006, 0.3127, 0.3427, 0.4090, 0.5115, 0.6954, 0.9571,
		1.0000, 0.5688, 0.2952, 0.1935, 0.1360, 0.1193, 0.1026, 0.0883, 0.0796, 0.0709,
		0.0623, 0.0543, 0.0502, 0.0460, 0.0418, 0.0377, 0.0335, 0.0312, 0.0292, 0.0272,
		0.0252, 0.0231, 0.0213, 0.0197, 0.0181,
	}),
	"pc_ngl_124_tm_30_194": spectral.NewCIESPD([]float64{
		0.0129, 0.0121, 0.0123, 0.0125, 0.0135, 0.0158, 0.0194, 0.0258, 0.0368, 0.0595,
		0.1048, 0.1870, 0.3186, 0.5537, 0.8715, 0.9411, 0.6796, 0.4618, 0.3485, 0.2570,
		0.1991, 0.1838, 0.1940, 0.2284, 0.2902, 0.3702, 0.4575, 0.5459, 0.6212, 0.6892,
		0.7450, 0.7849, 0.8216, 0.8529, 0.8791, 0.9018, 0.9214, 0.9388, 0.9534, 0.9656,
		0.9767, 0.9851, 0.9916, 0.9957, 1.0000, 0.9994, 0.9969, 0.9908, 0.9812, 0.9660,
		0.9456, 0.9198, 0.8895, 0.8502, 0.8095, 0.7657, 0.7189, 0.6671, 0.6182, 0.5644,
		0.5146, 0.4651, 0.4176, 0.3751, 0.3348, 0.2967, 0.2615, 0.2288, 0.1993, 0.1737,
		0.1508, 0.1306, 0.1130, 0.0972, 0.0843,
	}),
	"pc_ngl_308_tm_30_231": spectral.NewCIESPD([]float64{
		0.0059, 0.0127, 0.0194, 0.0145, 0.0097, 0.0220, 0.0343, 0.0776, 0.1209, 0.2392,
		0.3576, 0.5468, 0.7361, 0.8681, 1.0000, 0.8005, 0.6009, 0.4435, 0.2861, 0.2194,
		0.1527, 0.1422, 0.1318, 0.1694, 0.2071, 0.2892, 0.3714, 0.4692, 0.5670, 0.6426,
		0.7182, 0.7615, 0.8048, 0.8279, 0.8511, 0.8558, 0.8606, 0.8522, 0.8438, 0.8303,
		0.8168, 0.7919, 0.7670, 0.7399, 0.7128, 0.6757, 0.6385, 0.5995, 0.5604, 0.5219,
		0.4834, 0.4466, 0.4098, 0.3786, 0.3473, 0.3169, 0.2865, 0.2623, 0.2381, 0.2167,
		0.1952, 0.1772, 0.1591, 0.1472, 0.1353, 0.1232, 0.1110, 0.0987, 0.0863, 0.0791,
		0.0718, 0.0609, 0.0499, 0.0448, 0.0398,
	}),
	"pcv_soraa_prem_2700_k_tm_30_294": spectral.NewCIESPD([]float64{
		0.0078, 0.0095, 0.0118, 0.0182, 0.0393, 0.0951, 0.1996, 0.2897, 0.2995, 0.2690,
		0.2407, 0.2200, 0.2096, 0.2015, 0.1909, 0.1776, 0.1623, 0.1507, 0.1431, 0.1404,
		0.1421, 0.1515, 0.1675, 0.1915, 0.2253, 0.2662, 0.3077, 0.3509, 0.3918, 0.4268,
		0.4600, 0.4892, 0.5202, 0.5482, 0.5820, 0.6213, 0.6637, 0.7129, 0.7608, 0.8167,
		0.8605, 0.9090, 0.9463, 0.9759, 0.9945, 1.0000, 0.9974, 0.9754, 0.9473, 0.9105,
		0.8683, 0.8203, 0.7653, 0.7100, 0.6522, 0.5967, 0.5412, 0.4891, 0.4382, 0.3900,
		0.3464, 0.3046, 0.2694, 0.2350, 0.2054, 0.1782, 0.1550, 0.1342, 0.1158, 0.1003,
		0.0866, 0.0736, 0.0642, 0.0551, 0.0476,
	}),
	"pcv_soraa_vivid_2700_k_tm_30_296": spectral.NewCIESPD([]float64{
		0.0000, 0.0029, 0.0047, 0.0098, 0.0248, 0.0660, 0.1560, 0.2853, 0.3020, 0.2563,
		0.1943, 0.1504, 0.1241, 0.1222, 0.1217, 0.1318, 0.1395, 0.1614, 0.1860, 0.2211,
		0.2578, 0.2957, 0.3352, 0.3589, 0.3795, 0.3975, 0.4126, 0.4277, 0.4398, 0.4522,
		0.4668, 0.4794, 0.4914, 0.5017, 0.5132, 0.5258, 0.5429, 0.5563, 0.5734, 0.6021,
		0.6363, 0.6683, 0.7090, 0.7474, 0.8060, 0.8486, 0.8936, 0.9282, 0.9604, 0.9811,
		0.9911, 0.9988, 1.0000, 0.9799, 0.9525, 0.9160, 0.8763, 0.8249, 0.7672, 0.7129,
		0.6557, 0.6005, 0.5456, 0.4901, 0.4427, 0.3966, 0.3562, 0.3141, 0.2744, 0.2433,
		0.2131, 0.1862, 0.1646, 0.1434, 0.1241,
	}),
	"hy_ge_lumination": spectral.NewCIESPD([]float64{
		0.0001, 0.0001, 0.0002, 0.0002, 0.0003, 0.0006, 0.0011, 0.0021, 0.0038, 0.0066,
		0.0101, 0.0142, 0.0198, 0.0256, 0.0278, 0.0226, 0.0169, 0.0131, 0.0103, 0.0086,
		0.0082, 0.0087, 0.0101, 0.0122, 0.0146, 0.0172, 0.0196, 0.0217, 0.0235, 0.0247,
		0.0257, 0.0265, 0.0269, 0.0271, 0.0273, 0.0272, 0.0270, 0.0266, 0.0263, 0.0257,
		0.0251, 0.0245, 0.0241, 0.0237, 0.0237, 0.0240, 0.0252, 0.0276, 0.0317, 0.0372,
		0.0434, 0.0407, 0.0254, 0.0158, 0.0114, 0.0090, 0.0076, 0.0066, 0.0057, 0.0050,
		0.0044, 0.0038, 0.0034, 0.0029, 0.0025, 0.0022, 0.0019, 0.0017, 0.0015, 0.0013,
		0.0011, 0.0010, 0.0008, 0.0007, 0.0006,
	}),
	"pc_maxled": spectral.NewCIESPD([]float64{
		0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0002, 0.0003, 0.0005, 0.0010, 0.0017,
		0.0026, 0.0037, 0.0052, 0.0073, 0.0094, 0.0085, 0.0062, 0.0051, 0.0044, 0.0039,
		0.0040, 0.0045, 0.0054, 0.0064, 0.0074, 0.0083, 0.0091, 0.0097, 0.0104, 0.0109,
		0.0115, 0.0121, 0.0126, 0.0132, 0.0137, 0.0142, 0.0146, 0.0150, 0.0155, 0.0159,
		0.0164, 0.0170, 0.0176, 0.0182, 0.0188, 0.0195, 0.0200, 0.0204, 0.0206, 0.0207,
		0.0205, 0.0202, 0.0196, 0.0188, 0.0180, 0.0169, 0.0158, 0.0146, 0.0134, 0.0123,
		0.0111, 0.0100, 0.0089, 0.0079, 0.0070, 0.0062, 0.0054, 0.0047, 0.0041, 0.0036,
		0.0031, 0.0027, 0.0023, 0.0020, 0.0017,
	}),
	"hy_cree_module": spectral.NewCIESPD([]float64{
		0.0001, 0.0000, 0.0000, 0.0001, 0.0001, 0.0001, 0.0002, 0.0003, 0.0006, 0.0012,
		0.0019, 0.0028, 0.0040, 0.0053, 0.0073, 0.0088, 0.0088, 0.0080, 0.0073, 0.0065,
		0.0058, 0.0053, 0.0051, 0.0053, 0.0059, 0.0068, 0.0081, 0.0094, 0.0106, 0.0115,
		0.0123, 0.0128, 0.0131, 0.0132, 0.0133, 0.0133, 0.0132, 0.0131, 0.0129, 0.0127,
		0.0125, 0.0124, 0.0123, 0.0125, 0.0132, 0.0146, 0.0174, 0.0220, 0.0291, 0.0374,
		0.0356, 0.0212, 0.0114, 0.0074, 0.0056, 0.0046, 0.0039, 0.0034, 0.0030, 0.0027,
		0.0024, 0.0021, 0.0019, 0.0017, 0.0015, 0.0013, 0.0011, 0.0010, 0.0009, 0.0008,
		0.0007, 0.0006, 0.0005, 0.0005, 0.0004,
	}),
	"pc_current_ge": spectral.NewCIESPD([]float64{
		0.0003, 0.0003, 0.0003, 0.0004, 0.0006, 0.0011, 0.0019, 0.0034, 0.0059, 0.0099,
		0.0148, 0.0213, 0.0300, 0.0397, 0.0452, 0.0400, 0.0320, 0.0255, 0.0208, 0.0174,
		0.0159, 0.0158, 0.0171, 0.0199, 0.0236, 0.0278, 0.0322, 0.0363, 0.0401, 0.0432,
		0.0462, 0.0490, 0.0512, 0.0538, 0.0566, 0.0596, 0.0627, 0.0663, 0.0699, 0.0740,
		0.0774, 0.0808, 0.0833, 0.0849, 0.0859, 0.0859, 0.0846, 0.0826, 0.0795, 0.0757,
		0.0712, 0.0668, 0.0615, 0.0565, 0.0514, 0.0464, 0.0415, 0.0371, 0.0329, 0.0291,
		0.0257, 0.0225, 0.0196, 0.0171, 0.0149, 0.0130, 0.0112, 0.0097, 0.0084, 0.0073,
		0.0063, 0.0055, 0.0047, 0.0041, 0.0035,
	}),
	"cm_lumenetix": spectral.NewCIESPD([]float64{
		0.0003, 0.0003, 0.0003, 0.0004, 0.0005, 0.0008, 0.0014, 0.0026, 0.0052, 0.0100,
		0.0171, 0.0272, 0.0398, 0.0514, 0.0498, 0.0350, 0.0247, 0.0192, 0.0154, 0.0139,
		0.0148, 0.0170, 0.0206, 0.0250, 0.0296, 0.0339, 0.0376, 0.0409, 0.0440, 0.0468,
		0.0498, 0.0530, 0.0561, 0.0596, 0.0633, 0.0672, 0.0711, 0.0753, 0.0797, 0.0839,
		0.0875, 0.0913, 0.0942, 0.0964, 0.0979, 0.0985, 0.0978, 0.0966, 0.0939, 0.0906,
		0.0865, 0.0822, 0.0768, 0.0713, 0.0658, 0.0602, 0.0546, 0.0492, 0.0441, 0.0393,
		0.0349, 0.0308, 0.0271, 0.0237, 0.0207, 0.0180, 0.0156, 0.0135, 0.0117, 0.0101,
		0.0087, 0.0075, 0.0064, 0.0055, 0.0047,
	}),
	"cm_acuity_evo_4": spectral.NewCIESPD([]float64{
		0.0001, 0.0001, 0.0001, 0.0001, 0.0002, 0.0002, 0.0004, 0.0008, 0.0016, 0.0031,
		0.0054, 0.0091, 0.0141, 0.0199, 0.0268, 0.0316, 0.0301, 0.0226, 0.0159, 0.0120,
		0.0094, 0.0076, 0.0072, 0.0077, 0.0093, 0.0116, 0.0145, 0.0176, 0.0201, 0.0225,
		0.0243, 0.0254, 0.0262, 0.0264, 0.0267, 0.0266, 0.0264, 0.0261, 0.0256, 0.0250,
		0.0244, 0.0237, 0.0231, 0.0228, 0.0228, 0.0236, 0.0255, 0.0293, 0.0359, 0.0461,
		0.0513, 0.0349, 0.0200, 0.0135, 0.0104, 0.0087, 0.0075, 0.0066, 0.0058, 0.0052,
		0.0046, 0.0041, 0.0036, 0.0032, 0.0028, 0.0025, 0.0022, 0.0019, 0.0017, 0.0015,
		0.0013, 0.0012, 0.0010, 0.0009, 0.0008,
	}),
	"cm_intense_mxrtr2": spectral.NewCIESPD([]float64{
		0.0001, 0.0001, 0.0001, 0.0001, 0.0002, 0.0003, 0.0005, 0.0009, 0.0018, 0.0035,
		0.0060, 0.0099, 0.0147, 0.0205, 0.0265, 0.0304, 0.0282, 0.0207, 0.0147, 0.0110,
		0.0086, 0.0070, 0.0067, 0.0073, 0.0088, 0.0111, 0.0140, 0.0169, 0.0196, 0.0218,
		0.0236, 0.0247, 0.0255, 0.0259, 0.0260, 0.0260, 0.0259, 0.0255, 0.0251, 0.0246,
		0.0240, 0.0233, 0.0227, 0.0221, 0.0219, 0.0220, 0.0230, 0.0254, 0.0295, 0.0364,
		0.0445, 0.0430, 0.0276, 0.0167, 0.0115, 0.0090, 0.0076, 0.0065, 0.0057, 0.0050,
		0.0045, 0.0040, 0.0035, 0.0031, 0.0028, 0.0025, 0.0022, 0.0019, 0.0017, 0.0015,
		0.0013, 0.0012, 0.0010, 0.0009, 0.0008,
	}),
	"pc_samjin": spectral.NewCIESPD([]float64{
		0.0007, 0.0007, 0.0008, 0.0010, 0.0013, 0.0018, 0.0030, 0.0057, 0.0113, 0.0224,
		0.0416, 0.0718, 0.1167, 0.1757, 0.1885, 0.1278, 0.0839, 0.0651, 0.0477, 0.0391,
		0.0403, 0.0451, 0.0522, 0.0608, 0.0687, 0.0747, 0.0786, 0.0812, 0.0827, 0.0841,
		0.0852, 0.0865, 0.0879, 0.0887, 0.0893, 0.0894, 0.0894, 0.0890, 0.0882, 0.0873,
		0.0861, 0.0848, 0.0832, 0.0813, 0.0792, 0.0764, 0.0734, 0.0698, 0.0659, 0.0617,
		0.0573, 0.0527, 0.0480, 0.0436, 0.0392, 0.0350, 0.0310, 0.0273, 0.0239, 0.0209,
		0.0183, 0.0159, 0.0138, 0.0120, 0.0103, 0.0089, 0.0076, 0.0066, 0.0056, 0.0048,
		0.0041, 0.0036, 0.0031, 0.0026, 0.0023,
	}),
	"cm_edison_price_lumenetix": spectral.NewCIESPD([]float64{
		0.0001, 0.0001, 0.0001, 0.0001, 0.0002, 0.0003, 0.0005, 0.0009, 0.0014, 0.0022,
		0.0037, 0.0066, 0.0109, 0.0163, 0.0212, 0.0211, 0.0149, 0.0093, 0.0062, 0.0045,
		0.0037, 0.0038, 0.0046, 0.0060, 0.0077, 0.0094, 0.0108, 0.0118, 0.0125, 0.0129,
		0.0131, 0.0131, 0.0131, 0.0130, 0.0128, 0.0127, 0.0126, 0.0124, 0.0122, 0.0120,
		0.0116, 0.0113, 0.0109, 0.0104, 0.0100, 0.0097, 0.0096, 0.0098, 0.0105, 0.0118,
		0.0139, 0.0173, 0.0201, 0.0157, 0.0085, 0.0052, 0.0036, 0.0028, 0.0023, 0.0019,
		0.0017, 0.0014, 0.0012, 0.0011, 0.0009, 0.0008, 0.0007, 0.0006, 0.0005, 0.0005,
		0.0004, 0.0004, 0.0003, 0.0003, 0.0002,
	}),
	"cm_pathway_lexel": spectral.NewCIESPD([]float64{
		0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0001, 0.0001, 0.0002, 0.0003, 0.0007,
		0.0012, 0.0019, 0.0026, 0.0034, 0.0046, 0.0048, 0.0036, 0.0028, 0.0025, 0.0022,
		0.0022, 0.0025, 0.0030, 0.0037, 0.0048, 0.0062, 0.0079, 0.0098, 0.0110, 0.0113,
		0.0106, 0.0095, 0.0086, 0.0080, 0.0074, 0.0071, 0.0069, 0.0068, 0.0069, 0.0070,
		0.0072, 0.0075, 0.0080, 0.0088, 0.0102, 0.0124, 0.0163, 0.0225, 0.0317, 0.0362,
		0.0232, 0.0127, 0.0084, 0.0065, 0.0055, 0.0048, 0.0043, 0.0038, 0.0034, 0.0030,
		0.0027, 0.0024, 0.0021, 0.0018, 0.0016, 0.0014, 0.0012, 0.0011, 0.0009, 0.0008,
		0.0007, 0.0006, 0.0005, 0.0004, 0.0004,
	}),
	"pc_green_creative_mr16": spectral.NewCIESPD([]float64{
		0.0270, 0.0280, 0.0320, 0.0370, 0.0480, 0.0780, 0.1270, 0.2160, 0.3690, 0.5880,
		0.8740, 1.2350, 1.7400, 2.5330, 3.4000, 3.6790, 3.2510, 2.7500, 2.3950, 2.1010,
		1.9210, 1.8960, 1.9760, 2.1300, 2.3300, 2.5500, 2.7640, 2.9680, 3.1650, 3.3490,
		3.5380, 3.7250, 3.9080, 4.0830, 4.2600, 4.4260, 4.5890, 4.7420, 4.9010, 5.0570,
		5.2170, 5.3840, 5.5590, 5.7340, 5.8970, 6.0470, 6.1700, 6.2570, 6.2960, 6.2920,
		6.2320, 6.1230, 5.9640, 5.7670, 5.5320, 5.2580, 4.9680, 4.6590, 4.3440, 4.0260,
		3.7050, 3.3910, 3.0930, 2.8070, 2.5390, 2.2880, 2.0520, 1.8380, 1.6380, 1.4590,
		1.2970, 1.1490, 1.0190, 0.9000, 0.7970,
	}),
	"pc_soraa_mr16_830": spectral.NewCIESPD([]float64{
		0.0230, 0.0250, 0.0290, 0.0340, 0.0450, 0.0710, 0.1190, 0.2060, 0.3640, 0.6100,
		0.9550, 1.3810, 1.8480, 2.3650, 2.6780, 2.3850, 1.8020, 1.4210, 1.1920, 1.0330,
		0.9970, 1.0690, 1.2170, 1.4350, 1.6840, 1.9470, 2.1970, 2.4300, 2.6460, 2.8480,
		3.0420, 3.2350, 3.4330, 3.6430, 3.8560, 4.0810, 4.3110, 4.5490, 4.7920, 5.0210,
		5.2300, 5.4210, 5.5730, 5.6860, 5.7540, 5.7710, 5.7370, 5.6500, 5.5120, 5.3280,
		5.1160, 4.8700, 4.5940, 4.3080, 4.0110, 3.7070, 3.4040, 3.1090, 2.8270, 2.5550,
		2.2990, 2.0640, 1.8440, 1.6440, 1.4610, 1.2930, 1.1400, 1.0050, 0.8860, 0.7820,
		0.6880, 0.6060, 0.5300, 0.4640, 0.4070,
	}),
	"hy_cree_par38": spectral.NewCIESPD([]float64{
		0.0098, 0.0105, 0.0108, 0.0110, 0.0120, 0.0146, 0.0194, 0.0251, 0.0298, 0.0423,
		0.0673, 0.1156, 0.1983, 0.3413, 0.5041, 0.5114, 0.3776, 0.2843, 0.2325, 0.1925,
		0.1815, 0.1992, 0.2360, 0.2873, 0.3491, 0.4127, 0.4698, 0.5171, 0.5544, 0.5831,
		0.6029, 0.6149, 0.6232, 0.6285, 0.6346, 0.6423, 0.6550, 0.6732, 0.6979, 0.7292,
		0.7664, 0.8078, 0.8539, 0.8954, 0.9333, 0.9651, 0.9862, 0.9983, 0.9992, 0.9883,
		0.9659, 0.9357, 0.8980, 0.8534, 0.8020, 0.7470, 0.6902, 0.6321, 0.5739, 0.5180,
		0.4679, 0.4207, 0.3769, 0.3349, 0.2964, 0.2609, 0.2288, 0.2000, 0.1733, 0.1502,
		0.1297, 0.1119, 0.0971, 0.0846, 0.0741,
	}),
	"pc_seoul_sunlike_3030": spectral.NewCIESPD([]float64{
		0.0000, 0.0000, 0.0000, 0.0000, 0.0001, 0.0003, 0.0002, 0.0002, 0.0001, 0.0001,
		0.0002, 0.0002, 0.0003, 0.0004, 0.0004, 0.0004, 0.0004, 0.0004, 0.0003, 0.0003,
		0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003,
		0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003,
		0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003, 0.0003,
		0.0003, 0.0002, 0.0002, 0.0002, 0.0002, 0.0002, 0.0002, 0.0002, 0.0002, 0.0002,
		0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,
		0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
	}),
}

func GetLightSource(name string) (*spectral.SpectralPowerDistribution, bool) {
	spd, ok := lightSources[name]
	return spd, ok
}

// ListLightSources returns a slice of all available light source keys
func ListLightSources() []string {
	keys := make([]string, 0, len(lightSources))
	for key := range lightSources {
		keys = append(keys, key)
	}
	return keys
}
